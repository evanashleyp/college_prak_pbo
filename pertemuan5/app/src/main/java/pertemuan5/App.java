/*
 * This source file was generated by the Gradle 'init' task
 */
package pertemuan5;

import java.util.ArrayList;
import java.util.Scanner;

enum name {SPHERE, CYLINDER, CUBOID, CUBE}


public class App {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        ArrayList<ThreeDObject> shelf = new ArrayList<ThreeDObject>();
        shelf.add(new Cube(5.00));
        
        int menu = -1;
        while (menu != 0) {
            System.out.println("Menu");
            System.out.println("1. Add new 3D object");
            System.out.println("2. Print all");
            System.out.println("0. Exit");
            System.out.print("Enter menu: ");
            menu = Integer.parseInt(sc.nextLine());
            switch (menu) {
                case 1:
                    System.out.println("1. Sphere");
                    System.out.println("2. Cylinder");
                    System.out.println("3. Cuboid");
                    System.out.println("4. Cube");
                    System.out.print("Enter shape: ");
                    int shape = Integer.parseInt(sc.nextLine());

                    switch (shape) {
                        case 1:
                            System.out.print("Enter Radius: ");
                            Double r = Double.parseDouble(sc.nextLine());
                            if (r == null || r == 0.00) {
                                shelf.add(new Sphere());
                            } else {
                                shelf.add(new Sphere(r));
                            }
                            break;
                        case 2:
                            System.out.print("Enter Radius: ");
                            Double radius = Double.parseDouble(sc.nextLine());
                            System.out.print("Enter Height: ");
                            Double height = Double.parseDouble(sc.nextLine());

                            if (radius == null || radius == 0.00 || height == null || height == 0.00) {
                                shelf.add(new Cylinder());
                            } else {
                                shelf.add(new Cylinder(radius, height));
                            }

                            break;
                        case 3:
                            System.out.print("Enter Length: ");
                            Double length = Double.parseDouble(sc.nextLine());
                            System.out.print("Enter Width: ");
                            Double width = Double.parseDouble(sc.nextLine());
                            System.out.print("Enter Height: ");
                            Double height2 = Double.parseDouble(sc.nextLine());

                            if (length == null || length == 0.00 || width == null || width == 0.00 || height2 == null || height2 == 0.00) {
                                shelf.add(new Cuboid());
                            } else {
                                shelf.add(new Cuboid(width, height2, length));
                            }
                            break;
                        case 4:
                            System.out.print("Enter Side: ");
                            Double side = Double.parseDouble(sc.nextLine());

                            if (side == null || side == 0.00) {
                                shelf.add(new Cube());
                            } else {
                                shelf.add(new Cube(side));
                            }
                            break;
                    
                        default:
                            break;
                    }

                    break;

                case 2:
                    if (shelf.isEmpty()) {
                        System.out.println("Shelf empty");
                    } else {
                        for (int i = 0; i < shelf.size(); i++) {
                            System.out.println(shelf.get(i).getScript());
                        }
                    }
                    break;
            
                default:
                    break;
            }

        }
    }
}
